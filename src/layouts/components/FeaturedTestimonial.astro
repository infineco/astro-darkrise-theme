---
import { markdownify } from "@/lib/utils/textConverter";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";
import ImageMod from "./ImageMod.astro";

const { featuredCustomer, alternateLayout } = Astro.props;

let featuredTestimonial;

let list = (
  (await getEntry(
    "testimonialSection",
    "testimonial"
  )) as CollectionEntry<"testimonialSection">
).data.list;

// If featured customer name is passed then count that customer as featured
if (featuredCustomer) {
  featuredTestimonial = list.find(
    (testimonial) => testimonial.customer.name === featuredCustomer
  );

  list = list.filter((item) => item.customer.name !== featuredCustomer);
}
---

{/* Featured Testimonial */}
{
  featuredTestimonial && (
    <div class="col-12 pt-20" data-aos="fade-up-sm" data-aos-delay="200">
      <div
        class={`relative rounded-lg border border-border bg-dark/50 p-5 max-lg:mb-10 max-lg:last:mb-0 md:p-10`}>
        <div class="row gy-4 items-center">
          <div class="lg:col-5">
            <div class="relative overflow-hidden rounded-lg bg-dark lg:me-8 transition-transform duration-300 hover:scale-105">
              <ImageMod
                src={featuredTestimonial.customer.avatar || ""}
                alt={featuredTestimonial.customer.name || "customer name"}
              />
              {alternateLayout && (
                <div class="absolute bottom-0 left-0 w-full bg-gradient-to-t from-black/50 to-transparent p-8">
                  {featuredTestimonial.customer.name && (
                    <h4
                      class="tracking-none mb-2 mt-6 text-lg font-bold"
                      set:html={markdownify(featuredTestimonial.customer.name)}
                    />
                  )}
                  {featuredTestimonial.customer.designation && (
                    <p
                      class="text-sm opacity-70"
                      set:html={markdownify(
                        featuredTestimonial.customer.designation
                      )}
                    />
                  )}
                </div>
              )}
            </div>
          </div>
          <div class="lg:col-7" data-aos="fade-up-sm">
            <div
              class={`min-h-full rounded-s-3xl ${!alternateLayout && "py-8 lg:pb-0 lg:pt-8"}`}>
              {!alternateLayout && featuredTestimonial.title && (
                <h3
                  class="tracking-none h5 mb-6 font-bold"
                  set:html={markdownify(featuredTestimonial.title)}
                />
              )}
              {featuredTestimonial.content && (
                <p
                  class={`${
                    alternateLayout
                      ? "h4 tracking-none opacity-80"
                      : "opacity-70 text-lg/[170%]"
                  }`}
                  set:html={markdownify(featuredTestimonial.content)}
                />
              )}

              {!alternateLayout && (
                <>
                  {featuredTestimonial.customer.name && (
                    <h4
                      class="tracking-none mb-2 mt-6 text-lg font-bold"
                      set:html={markdownify(featuredTestimonial.customer.name)}
                    />
                  )}
                  {featuredTestimonial.customer.designation && (
                    <p
                      class="text-sm opacity-70"
                      set:html={markdownify(
                        featuredTestimonial.customer.designation
                      )}
                    />
                  )}
                </>
              )}
            </div>

            {featuredTestimonial.list && (
              <ul class="mt-5 flex flex-col gap-x-10 gap-y-4 border-t border-border pt-5 md:flex-row md:pt-10 lg:mt-10">
                {featuredTestimonial.list.map((item) => (
                  <li>
                    <strong
                      class="h2 has-gradient"
                      set:html={markdownify(item.title)}
                    />

                    {item.description && (
                      <p
                        class="opacity-70"
                        set:html={markdownify(item.description)}
                      />
                    )}
                  </li>
                ))}
              </ul>
            )}
            {!alternateLayout && (
              <div
                aria-hidden="true"
                class="rotate-animation pointer-events-none absolute left-5/6 top-0 -z-10 h-80 w-[550px] -translate-x-1/2 rounded-full from-secondary via-secondary/80 via-60% to-dark/0 opacity-30 blur-[120px] bg-gradient-to-l"
              />
            )}
          </div>
        </div>
      </div>
    </div>
  )
}
